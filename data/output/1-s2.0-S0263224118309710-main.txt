# Measurement 133 (2019) 396–411
# Contents lists available at ScienceDirect
# Measurement
# ELSEVIER
# j o u r n a l h o m e p a g e : w w w . e l s e v i e r . c o m / l o c a t e / m e a s u r e m e n t
# “Less Give More”: Evaluate and zoning Android applications
Mohd Faizal Ab Razak a,b, Nor Badrul Anuar a,⇑, Rosli Salleh a, Ahmad Firdaus b, Muhammad Faiza, Hammoudeh S. Alamri b
a Department of Computer System and Technology, Faculty of Computer Science and Information Technology, University of Malaya, 50603 Kuala Lumpur, Malaysia
b Faculty of Computer Systems & Software Engineering, Universiti Malaysia Pahang, Lebuhraya Tun Razak, 26300 Kuantan, Pahang, Malaysia
# a r t i c l e i n f o
Article history:
Received 3 January 2017
Received in revised form 11 August 2018
Accepted 11 October 2018
Available online 13 October 2018
# Keywords:
Risk assessment
Analytical hierarchy process (AHP)
Mobile device
Android
EZADroid
# a b s t r a c t
The Android security mechanism is the first approach to protect data, system resource as well as reduce the impact of malware. Past malware studies tend to investigate the novel approaches of preventing, detecting and responding to malware threats but little attention has been given to the area of risk assessment. This paper aims to fill that gap by presenting a risk assessment approach that evaluate the risk zone for an application. The permission-based approach is presented for evaluating and zoning the Android applications (EZADroid), based on risk assessment. The EZADroid applies the Analytic Hierarchy Process (AHP) as a decision factor to calculate the risk value. A total of 5000 benign and 5000 malware applications were drawn from the AndroZoo and Drebin datasets for evaluation. Results showed that the EZADroid had achieved 89% accuracy rate in classifying the application into a different level of risk zones (i.e. very low, low, medium, and high).
Ó 2018 Elsevier Ltd. All rights reserved.
# 1. Introduction
As technology grows with time, the mobile device landscape continues to evolve. The increasing speed, power, storage space and available application services such as online shopping and games have led mobile users into adopting this technology. As the number of mobile devices increase, malware attacks, especially on Android, also rise consecutively . According to Trend Micro 2016 Security Prediction’s report, malware growth is expected to be 20 million by the end of 2016 while Android is labeled as a high-risk mobile application . The trend shows that more sophisticated mobile malware with zero-days attack bypassing a modern security defenses. The attacks are difficult to identify or mitigate since the number of attacks is probably higher and unnoticed. An Android application known as GodLess, for example, has infected 850,000 mobile devices worldwide . Out of the 96% surge in mobile device infections, Android was the hardest hit by 74% cases while the iOS device recorded only four (4) % of infection rate . In 2014, Symantec discovered more than 317 million new malware while PandaLabs was able to neutralize 75 million malware . These figures demonstrate that, on average, nearly one (1) million malware are released every day . This explosive growth in Android malware causes serious infiltrations to the Android system . In addition, the trends that will dominate in 2018 and influence malware attacks such as evasive techniques, malware vaccination, ransomware and Android malware . These trends will continue to dominate in 2018 with continually-evolving threats . To combat these problems, security researchers have designed various anti-virus, anti-malware software and risk analysis which used to detect and analyze the risk of malware applications . This is done by analyzing the patterns of the malicious activities which is achieved by looking at their predefined signatures or by monitoring the application’s behavior. In particular, the noticeable change of the malware behavior detected through existing approaches such as anti-virus, firewall and the Intrusion Detection Systems (IDSs) . However, these approaches are inadequate to fully eliminate the attack since recent malware are capable of evading detection . Google Play has introduced a detection approach known as Bouncer ; it provides automatic scanning and the removal of potentially malicious applications . However, it is inefficient enough to examine applications from third party sources  which may lead to privacy violations . Another approach provided by Google Play is a security mechanism which restricts Android applications from accessing private data by using a permission-based system . Nonetheless, the mechanism is also unable to completely protect Android from malware attacks. Expanding on this, the APK Auditor and Stowaway is one mechanism that uses the permission analysis to classify the Android applications as benign or malware.
⇑ Corresponding author.
E-mail addresses: faizalrazak@ump.edu.my (M.F.A. Razak), badrul@um.edu.my (N.B. Anuar), rosli_salleh@um.edu.my (R. Salleh), firdausza@ump.edu.my (A. Firdaus), faizzaki@um.edu.my (M. Faiz), ha.amri@gmail.com (H.S. Alamri).
https://doi.org/10/j.measurement
0263-2241/Ó 2018 Elsevier Ltd. All rights reserved.
M.F.A. Razak et al. / Measurement 133 (2019) 396–411
 while the DroidRisk  applies the quantitative risk assessment of both Android permissions and applications to test malware. Nonetheless, both are also inadequate. In addition, without appropriate risk assessment, the users’ are insecure and vulnerable to malicious attacks  and most of users’ ignore such long list of permissions since some of the permission is quite difficult to understand . Consequently, the users may install high-risk applications. These limitations of the Android permission mechanism inspire to evaluate the risk of an Android application based on their critically and providing the user with risk zones. Therefore, it is proposed that a decision-based approach such as the multi-criteria decision making mechanism be used for risk assessment.
Risk assessment is important for guarding users from dangerous application and it is a compelling issue. Although, Android security mechanism such as permission provide protection for user and device, these still show several flaws and threat. Even though, the users have some knowledge in mobile security threat, but the evaluation process for determine the risk is handled by user. This issue happen when user need to install an applications and Android only informs users about which permission need to be granted . Most of users unaware about the permission and some of them just ignore permission because unable to understood . Therefore, it is important to identify potential malware in Android applications thus to generate risk zone for warning potential malicious activities.
This study introduces the EZADroid which used to evaluate the Android applications by using minimal features but providing maximum information about them. This paper aims to evaluate the risk of Android applications based on risk zones by using Android permissions. In this paper, the Android applications are zoned into several categories (i.e. very low, low, medium and high) which inform users about the specific risk of the Android applications, based on their criticality. Specifically, this study applies risk assessment and the AHP technique so as to generate results that allow users to identify the risk zones of Android applications, thereby, protecting themselves from being affected by the threat. Both the approaches not only enlighten decision making but also the importance of each level of the findings. The features selection approach was used to select the criteria. The box plot analysis was also used to evaluate the effectiveness of the EZADroid system.
The main contributions of this study are as follows: adoption by users for daily personal and professional activities is attracting a significant threat. In order to avoid these threats on Android, there has to be a security mechanism and a risk assessment approach that offer users protection.
# 2. Android security mechanism
The Android security mechanism is important because it is used in a mobile device that contains a lot of sensitive information which used by attackers against the users. The application permission, application signing, and component encapsulation are types of security mechanisms used to avoid threats on the Android .
# 2. Risk assessment
Risk assessment is a process that identifies the loss, vulnerability, damage and the consequence of the action affecting costs. It is important because it presents the evaluated impact of the attack. It also helps to establish the level of safety or risk of a mobile application. The risk mechanism offered by a mobile device protects the user from unwillingly installing the malware application  and it does this by informing the user in the permissive mode and ensuring the right trust. Risk assessment allows the mobile user to lower the potential consequence of a threat to an acceptable level. Refs.  define risk as a component that is made up of a combination of threats and vulnerabilities. It leaves an impact on an asset when the vulnerabilities are flawed. Some researchers treat risk as a single entity . The risk may result in a number of losses which include cost, performance degradation as well as functionality. Risk assessment identifies the significant measures that used to control the risk; it protects the asset from any of the threats and it cautions users to take reasonable steps to manage the risk. As a system, risk assessment is used to measure the risk so as to generate the risk zones on the Android applications. This study implemented static analysis technique approach to collect Android permission as proposed features for criteria evaluation. The proposed criteria are used for making a judgment in risk assessment.
1. The evaluation used 5000 samples of malware application from the Drebin  dataset and 5000 benign samples from AndroZoo , both were considered an extensive amount of data to be collected and analysed for mobile device research works.
2. The experiment evaluation used the permission based application that was extracted from AndroidManifest.xml.
3. The EZADroid was able to zone the risks into four (4) categories: very low, low, medium and high.
4. We applied statistical evaluation to measure the effectiveness of the EZADroid system.
The rest of this paper is organized as follows: Section 2 describes the background of the research. Section 3 describes the related literature. Section 4 presents the research methodology. Section 5 describes the proposed approach. Section 6 explains the experiment and results and Section 7 concludes the paper.
# 2. Background
This section presents the background of the Android security mechanism, the risk assessment and the malware detection system. The increasing popularity of the Android and its widespread.
tion allows users to protect their sensitive data and code which could be compromised if unprotected . Any application to be installed in a mobile device needs to request permission from the user. However, a malware application known as LevelDropper has the capability to auto root itself on mobile devices; it also has the capability to perform the installation of other applications without the need of user’s confirmation . This demonstrates that permission-based Android security mechanisms need an enhancement in giving out warnings to users about the malware activities. Other than the Android security mechanism, the malware detection system is also able to detect malware activities. Two categories of malware detection approach are available: anomaly-based and signature based detection . These approaches have worked in the past but it is ineffective in evaluating the application risks. To optimize the malware detection system, the implementation of a risk assessment system is important.
Risk assessment analyzes any potential malicious applications through a statistical evaluation that is derived from chosen features which are the applications’ permission. Risk assessment categorized into a few steps encompassing: identifying, assessing, mitigating and monitoring as well as responding to the risk . To do risk assessment, a process of the assessment needs to be carried out in order to identify the probability and impact of the threat, which is calculated from the value of the asset, threat and vulnerability . The risk assessment that is developed aims to identify, quantify and prioritize the risk according to the criteria it sets. A traditional risk assessment approach identifies the mobile device as a single entity only  and also as an asset for confidential information . Examples of confidential information are calling history, location information, password and others . Similar to , risk assessment also analyses the asset based on the connectivity, device and data.
Risk assessment is also effective for assessing a specific vulnerability that monitors and responds to the risk. Such a process is normally performed by malware analysts to generate risk notifications which warn against potential malware activities . Nonetheless, without a proper approach that scrutinise the application, it is impossible to obtain an effective risk evaluation and an accurate risk zone. As discussed earlier, the proposed approach evaluates the risk based on the application permission. It is difficult to evaluate the risk when the application does not request access to any dangerous permissions. The Android malware such as DroidKungfuUpdate only uses certain permissions which exclude dangerous permissions . This problem was, however, solved by the mobile malware detection system which uses both the dynamic and the static analysis technique which provided good criteria for risk assessment that evaluates and categorises the application into a risk zone.
Identifying risks on mobile Android applications is an important step in risk assessment. In recent times, risk assessments are being conducted by different domains such as information security , health  and mobile security . Risk assessment, in combination with the Analytical Hierarchical Process (AHP), is able to improve the accuracy and the effectiveness of evaluating an application’s risk. The AHP is a structured technique for the multi-criteria decision-making approach that was developed by Saaty . With the ability for multicriteria decision making, AHP has used in many studies. It is broadly applicable because each application is well structured and effective in making a decision. For example, in fields of operation studies such as  and , they applied AHP to investigate the most applicable mobile service for the consumer. AHP method is used to identify the linkage between perceived performance benefit with and good practice in Small and Medium Enterprise (SME)  but  applied risk analysis to rating the building based on excellent, good, medium, low and poor as well as to lessen users’ safety. Within computer security studies, Refs.  adopted AHP to evaluate the trustworthiness of Android applications. Moreover, the methodology has proven to be very suitable for decision making and capable producing results that agree with expectations . According to a literature review by  shows that AHP most frequently used in multicriteria decision making and has been thoroughly tested by thousands of organization around the world for the last 35 years . The combination of AHP and risk assessment gives an advantage for decision making to assess quantitative of risk. In addition, a survey by  shows that AHP is a popular method to assess and manage information security risk. There are relatively few research works that use risk assessment to zone the risk in the study of malware. Based on this lack of research, it is also unlikely that an effective approach for evaluating the application risk is available. This lack has motivated the current study.
The significant process of assessing the risk is to determine the risk level. There are two approaches to do this : qualitative  and quantitative analysis. The qualitative risk analysis is an approach for ranking the impact and for identifying the risks according to the potentials. Ref.  proposed scoring as an approach to improve risk communication for the Android applications by using a probabilistic model. It is one way to prioritise the risks and responses . Another way is through the quantitative risk assessment approach which usually uses a quantitative scale to calculate cost , values of threat, vulnerability, and consequence of risk. Ref.  proposed a significant quantitative risk assessment network, the DroidRisk, for evaluating malicious activities on Android permissions. This framework relies on the risk assessment which provides risk signal warnings to the user about the potentially malicious activities. It also comes with a risk mitigation approach that allows for protection and control, blocking any threats before they attack, so as to reduce the impact . Risk mitigation is a process to control, remove and reduce the probability of the risk to an acceptable threshold . The andromaly  uses threat assessment to mitigate the threat by applying an automatic or manual response before sending the alerts to the user.
The above approaches demonstrate the rationale for applying security mechanisms and risk assessment in evaluating risk on Android applications. The risk assessment evaluation is similar to the malware detection system where performance evaluation such as accuracy, plays a significant role in measuring the efficiency. Various research has been conducted so as to gather the accuracy of risk evaluation which uses permission-based criteria. This approach also helps to locate the risk zone for Android applications. Using permissions to analyse risk that is associated with applications is a well-studied approach, both in industry and academic research. Major antivirus vendors use a similar approach to alert users of potentially risky or privacy-invasive applications. Kirin , for example, uses permission-based rules to prevent users from installing an application with risky permission combinations (e.g., Internet and Location permissions together be used to infiltrate location to the network). In contrast, Whyper  recommends using application descriptions as well as permissions to assess risk. The risk evaluation performed improves users’ awareness to the risk and protects them from the harmful applications. The box plot analysis that is applied in this study shows an acceptable evaluation rate that is able to project a risk zone. The following section describes the methodology applied.
# 4. Research methodology
This section presents the overall workflow of the experiment. The risk assessment approach was applied to effectively describe and analyze Android applications, in search for the risk zone. The
# 4. Criteria selection
This study used 10,000 Android applications samples as the training set. The total number of benign and malware samples were 5000 each. We manually predefined the samples with their appropriate labels, i.e. benign or malware. However, it is important to note that we validated the labelling process by checking the Android application’s status from VirusTotal. In other words, we label a sample as malware after running it through VirusTotal. VirusTotal is an online website that checks for viruses through URL or file upload. It is highly reliable as it inspects the sample and aggregates the result of over 70 antivirus scanners. VirusTotal is also widely used by researchers to provide the ground truth in their works. After that, this dataset samples are used for criteria selection.
The criteria selection uses a specific metric which computes and returns a score for each feature individually. The Waikato Environment for Knowledge Analysis (WEKA) approach was implemented for the criteria selection which includes using Information Gain to select the best criteria for use. This paper utilized Weka as the machine learning platform. Weka is a well-established software that has a collection of machine learning algorithms. It is a well-rounded and complete software suite that fits the objective of this research. We implemented Information Gain in Weka directly to our dataset. This approach saves us time from manually coding the algorithm. Besides that, the reliability and accuracy of Weka’s algorithms are well recognized. The criteria with a high value of Information Gain is selected. In this way, 10, 20 and 30 criteria were selected based on Information Gain values ranging from 0 to 1. The best criteria helps to improve the performance measure. Table 2 shows a list of the criteria recorded using the Information Gain approach. These were then stored in the database for the risk assessment process.
It appears that phone calls and messages were the top of the group in the permission-based system which represents the type of features noted on the Android developer. It is necessary to assert that this group is significant in the risk assessment approach.
# 4. Risk assessment criteria
Android applications require permission granting from the users in order to invoke the Android API successfully. The declared permission in AndroidManifest.xml file is important and effective for revealing the potential risk and for it to be used as a warning message to notify users. Most of the risky applications require a combination of some permissions in order to launch the attack. Fig. 1 illustrates the percentage of the top ten (10) most requested permission in the benign and malware applications of the sample dataset.
# List of criteria.
400 M.F.A. Razak et al. / Measurement 133 (2019) 396–411
an outcome that reflects the result of Zhou and Jiang (2012) in detecting malware by permission  which was the first research done on the Android malware family. Moreover, the malware also requests more permissions on communication such as SEND_SMS, RECEIVED_SMS, and READ_SMS. It seems clear that the malware application is more interested in dangerous permissions in order to gain access to sensitive information. It appears to be using the Internet as a medium.
# 4. General framework
The AHP was used to calculate the risk of the applications. Fig. 2 illustrates the main components of the EZADroid framework which is then categorized into three components: (a) response option, (b) response systems and (c) risk zone. The proposed framework attempts to identify the risk of Android applications whether it is malware or benign by assessing the risk zone. It is very important to choose appropriate approach, especially when dealing with the
# 5. Proposed approach
The risk assessment approach is used to improve the effectiveness of the risk evaluation by generating a risk zone for the user. It serves as a warning against malicious applications (e.g. very low, low, medium, and high). This study submits Android applications to VirusTotal to validate and ensure the trustworthiness of dataset. In addition, the proposed approach utilized the relevant features as criteria in multicriteria decision making by implementing machine learning approach to significantly increase detection accuracy for risk analysis and malware detection. The proposed approach achieved higher accuracy with 89%. The results also validated using statistical analysis. Table 3 presents the description of the proposed approach.
# 5. Risk assessment phase
The AHP approach was implemented to evaluate the risk. The approach uses a pair-wise comparison of criteria to evaluate the weight of the criteria; this is in line with the main objective of the hierarchical structure . The pair-wise comparison was performed through the matrix table which evaluates the consistency of the judgment . The comparison matrix (A) takes the size n x n where n denotes the number of criteria being compared, which is relative to the specific elements. The elements of the matrix are aij. Table matrix A demonstrates an evaluation that is similar to :
aij = ajk ajk
aij = 1/ajk
where i, j and k are any elements of the matrix A.
# 5. Judgment matrix
In the AHP approach, the hierarchy of risk assessment is measured through pairwise comparisons which is important for estimating the relative elements noted in a hierarchy with a preceding level. The pairwise comparison is measured by using the ratio scale which is used to define the intensity of the important judgments. Table 4 shows the fundamental scale of the absolute numbers of the AHP approach . Table 4 illustrates the judgments through the fundamental scale of the AHP. These scales were used to determine the relative importance of each criterion, starting with the scale of 1 until 9. Table 5 illustrates the judgment matrix for the decision factor and indicator used in risk zone threshold. Table 5 shows a comparison of the same layers with the upper layers so as to generate a judgment matrix. The resulting risk assessment is demonstrated in the experiment and result section.
# 6. Experiment and result
The assessment consists of two (2) experiments. The first applies the risk assessment approach to evaluate the risk value. The second generates a risk zone. The experiment uses the box plot analysis to show the difference between the malware and the benign applications. The box plot analysis was able to discover.
# 402
# M.F.A. Razak et al. / Measurement 133 (2019) 396–411
# Fundamental scale of absolute numbers.
Reciprocals of above: If nonzero numbers assigned to activity I when compared with activity j, then when compared with I, j has the reciprocal value.
Rationals: Ratios originate from the scale.
# Explanation
Two activities contribute equally to the objective.
One activity is slightly being favored over another based on experience and judgment.
One activity is strongly being favored over another based on experience and judgment.
One activity is very strongly favored over another based its dominance in practice.
One activity is utmost important favored over another based on the highest possible order of affirmation.
A sensible assumption: If consistency were to be forced by obtaining n numerical values to span the matrix.
# The Judgment matrix criteria.
Consistency ratio = 0.
The risk potential and to predict the risky malware. It plays an important role in determining how relevant the EZADroid was. Finally, the risk zone was determined after the results were gathered. The following sections describe the experiment in greater details.
# 6. Evaluation procedure
and effectiveness of research work . The performance of the model largely depends on the quality of the features rather than just the quantity. A large number of features may contain redundant information which leads to lower true positive rates. Besides that, this study used minimal features as an attempt to reduce the dimensionality of the dataset.
This paper evaluates the risk of 5000 benign and 5000 malware applications extracted from the sample datasets. Each application permission was extracted so as to collect their permissions from AndroidManifest.xml. Each of the permission on the application was stored in the database as a criterion collection. This criterion is important to guarantee the accuracy of the proposed approach. The permission-based approach was used to identify the risk zone. After the EZADroid accepts the application’s permission-based behavioral data, it computes the risk value and then determines the risk zone to see whether the application is very low, low, medium or high risk.
# Distributions of datasets.
# 6. Risk assessment evaluation
This section presents the risk assessment evaluation which uses the AHP approach. Table 7 shows the results obtained. It classifies the benign and malware applications accordingly. It appears that all the malware and benign applications had obtained the risk values from the AHP analysis. From the risk values noted, the risk zone was classified accordingly. In order to validate the experiment, VirusTotal  was used to strengthen the risk zone evaluation.
In order to estimate the risk value of Android applications, this study calculate the risk value of permission using multicriteria decision making (Table 5). There are group of permission with different of value. Thus, this study able to evaluate the risk zone of Android application. The more permission used in dangerous category by Android application present higher risk value. It is certain.
# 6. Risk zone threshold
To establish a methodological approach for identifying the risk zone in the Android applications, this section explains the risk value and the zoning process. Four types of risk zones were applied in the experiment: very low, low, medium and high . These risk zones have been used in security for the purpose of evaluating the risk impact. The risk zone has been exemplified in the works undertaken by . They used the method for the Android platform and for incident prioritization. The risk zones of the current study are presented in different colors depending on the levels of risk as a means to increase awareness among Android users. This application of colors have also been applied by previous researchers .
Illustrates the description of the risk zone.
As the table illustrates, the risk zones determine the levels of severity of application. The different colors can further alert users of the severity of the risks involved. Very low and low-risk zone means that the risk of application is acceptable and safe to use. Fig. 3 illustrates the threshold for the risk zone.
This threshold is not a definitive value. It subjected to other reassessments, thus different scales will produce a different distribution. The selection of this threshold is important to make a suitable and significant decision of the risk zones. The risk zone threshold was adopted from Table 10 which is the distribution analysis taken from the box plot of ten (10) permissions. Furthermore, this threshold indicates the significance of the mapping process between the risk zone and the risk response planning for future works.
Lists the data analysis taken from the box plot which uses ten (10) permissions. The following section describes the results of the experiment.
# 6. Result
In order to avoid any bias, an arbitrary number of criteria selection was used. This study used the criteria selection approach with three different configurations: 10, 20 and 30 criteria to select the highest out of the 378 criteria featured by the feature selection algorithms (e.g. Information Gain). The box plot analysis shown in Fig. 4 is related to the risk value for malware and benign applications. The box plot analysis is also able to identify the criteria more effectively as it differentiates the benign from the malware.
Samples evaluation and risk zone on applications.
# 404
# M.F.A. Razak et al. / Measurement 133 (2019) 396–411
# List of malware family and risk value.
Description of the risk zone.
Data analysis for 10 permission.
applications. This difference will suggest that the two populations belong to different distributions. Figs. 4–6 illustrate the malware and benign applications. The trend illustrates that permission-based criteria are significant and relevant for conducting risk assessment.
The distribution shown in Figs. 4–6 demonstrates a different value. This means that there is a distinction between the benign and malware applications. This evidence strengthens the experiment evaluation with a result showing an accuracy of over 80% for the risk zone. It is fascinating to note that the implementation of the EZADroid is able to determine the risk zone based on 10,000 samples.
# 6. Statistical analysis
This section presents a component of the data analytics. In the context of research, statistical analysis scrutinizes data and presents a selection taken from the population. This study applied linear regression which was used to specify the nature of the relation between the malware and benign applications. A total of 10,000 applications taken from the sample dataset were applied. The experiment was able to manage the dependent (risk value) and independent (risk zone) variable score into the same row. Table 13 illustrates the variables used for analysis and the results of the mean and standard deviation.
In order to locate and interpret the relevant regression and correlation coefficients, the experiment needs to consider a variable Entered/Removed, model summary, ANOVA, and coefficient. Table 14 illustrates the independent variables. Tables 15–17 demonstrate the statistics of the data variable score. Table 15 demonstrates the correlation coefficient (r) and the coefficient of the determination (r square). It specifies the strength of the linear trend between the variables. Table 16 indicates the significant value of the independent-variable scores when compared to a predetermined a. Finally, Table 17 illustrates the y-intercept and the slope for the regression equation.
The model summary shows the correlation between the two variables (r): correlation coefficient (r) and the coefficient of determination (r square). The value of R represents the correlation coefficient that indicates the relation strength between the independent variable to the dependent variable.
In addition, previous study by , they mapped risk value to address the impact of incident in intrusion detection. Based on the risk value, the incidents are ranked from the highest to the lowest value where the highest value contribute to probability of malicious activity. By categorizing malware and benign, the EZADroid had achieved an accuracy rate of 89% of the malware and 87% for the benign outcomes, particularly when focusing on the 10 criteria selection only. The outcome thus implies that the EZADroid is able to evaluate the risk of the benign and malware applications effectively. Therefore, it improves our study goals to identify the risk of applications and detect malware. The high-risk zone detected from the 10 criteria have the highest proportion of risk with a total of 3622 malwares. This proportion is followed by the 20 and 30 criteria with a total of 3074 and 2376 malware, respectively.
As can be seen from Fig. 7 which illustrates the risk zone evaluation on risk generated from the malware and benign applications using 10, 20 and 30 criteria, the total frequency of the application is measured by presenting the type of risk zone. In the 10 criteria selection, over 80% of the malware were detected as high risk. Based on this, it concluded that the proposed approach is efficient in evaluating the risk for most of the sample datasets. In order to warrant the significance of the proposed approach, a statistical analysis of the 10 criteria was conducted. The 10 criteria were selected because the results were more reliable, as shown on the box plot analysis.
# M.F.A. Razak et al. / Measurement 133 (2019) 396–411
Description statistics.
Variables entered/removed.
a Dependent variable: risk value.
# 6. Discussion
The EZADroid implemented a permission-based application assessment. It collected 5000 applications from a malware repository, Drebin, which was generally accepted as the Android malware dataset . It composes of different families, Android Malware Genome Project  and also detected in the wild by a well-established AntiVirus vendor  which is important for detection and training purposes. However, by only detecting the category of the application in two classes (malware or benign), in risk assessment point of view, it is inadequate. Accordingly, it is important to measure and evaluate each application to identify the risk factors and threat that contain the potential to cause malicious to the user. Once the measurements have been made, the subsequent process is to analyze how severe and likely the risk. This is crucial to decide what type of control and elimination that will take place. With this implementation, we able to calculate the risk of the malware in detail. Therefore, this paper proposes EZADroid to measure the risk of the application rather than classify them.
The EZADroid used 5000 benign applications downloaded from AndroZoo  which belongs to Google Play. The sample contains more than five millions different Android applications and each of which has been analyses by 10 of different AntiVirus product . These dataset is important for training purpose which contribute to the significant result.
In total, this paper analyzed 10,000 applications by using the risk assessment approach. Both the benign and malware applications were analyzed by VirusTotal  to check the validity of the malicious activities . The VirusTotal provides significant results which also include a definition of all kinds of malware through 42 antivirus products (e.g. Symantec and Kaspersky) . The experimental results demonstrate the effectiveness of the EZADroid in differentiating the malware from the benign applications. This is illustrated in Figs. 4–6.
Using less criteria seems to show promising results, as illustrated in Table 11. The outcome is also supported by  where
Model summary.
a Predictors: (constant), risk zone.
ANOVA.
a Predictors: (constant), risk zone.
Coefficients.
# 8
Very Low Low Medium High RiskZone
It was noted that less criteria resulted in less time; it also reduced the cost of the experiment and it was prominent in showing more accurate results. From another perspective, the presence of the criteria (including benign and malware) provided some unique advantages in generating a risk zone and in preventing the malicious applications from affecting Android mobile users. It thus helped to increase users’ awareness. One of the more significant findings that emerged from this experiment is that the number and the type of criteria could have affected the effectiveness of the risk assessment. One possible solution recommended is to adapt a machine learning approach to create a different result in the risk assessment so as to ensure the effectiveness of the risk zone.
To demonstrate the superiority of our work, we compared the results with existing solutions in Table 18. Ref.  conducted a study on risk assessment for Android applications that can identify malware applications using Naive Bayes classification. Ref.  proposed Android application package (APK) Vulnerability Identification System (AVIS) that classifies an application into malware or benign based on DEX file. The authors used 250 applications samples as the training set where the total number of malware and benign samples were 125 each. Their approach achieved approximately 94% accuracy. As a comparison, although our work recorded a slightly lower accuracy, the size of the dataset used in our study was much higher, i.e. 10,000 samples. As such, the approach proposed in this research managed to lower the risk of overfitting and has better generalization on unseen samples.
On the other hand, Ref.  proposed XDroid, an Android application and resource risk assessment tool. XDroid implemented dynamic analysis technique to detect malware by observing the applications’ behaviors into an observation set. The results showed that XDroid only managed to achieve 82% accuracy with 1000 samples training set. However, XDroid consumed high consumption of computational time to train the model. In addition, AndroDialysis  utilized intent and permission as features in detecting malware rather than analyzing risks. Although they marked 91% accuracy, however, they focused on intent and permission only. In contrast, our EZADroid solution implements static analysis techniques which are effective to detect known malware and fast detection. Table 18 lists the comparison with previous study.
The results of experiments reveal the effectiveness of our approach. Detection rate with 89% of accuracy, this shows that our proposed approach performed better. The proposed approach also involves risk analysis on applications as well as responses to users’ with risk zone. This raise security concerns from the users. Therefore, the sensitive data of the users are properly protected and response on time. Further that, our approach able to reduce attack from malware application and minimize the risk.
# 6. Future works
This section presents an illustration of future works. As the velocity of the change of malware increase, researchers need a new approach to be adapted into their future works. This include extending the research to refine the risk zone with risk response planning (e.g. due to the noticeable spark of malware) and to increase user awareness. Another potential research area is to address the known challenges in risk evaluation such as identifying the risk zone between the malware and benign applications by minimising the false positive. In this regard, the EZADroid needs to develop an effective risk zone by implementing the machine learning approach to achieve better efficiency and accuracy .
# 7. Conclusion
This paper has highlighted the significant findings of risk assessment and the risk zone for Android applications through the EZADroid which implements a permission-based application to determine the risk zone. Based on that knowledge and the effective risk evaluation, it was able to assess the mobile Android application into four (4) types of risk zone (e.g. very low, low, medium and high). The main contributions of this experiment include the following: it evaluated 5000 malware application from the Drebin dataset  and 5000 benign applications from the AndroZoo  dataset. It engaged the 10, 20 and 30 criteria approach for the risk evaluation and it performed four (4) risk evaluations (e.g. very low, low, medium and high). Based on the results, the risk on Android applications was detected effectively using less features yet yielding high detection rate.
The data were collected from the permission-based applications using static analysis. The collected data were organized in a database. In order to select the effective criteria to increase the effectiveness of the risk evaluation on the EZADroid, this paper applied the criteria selection approach. The combination of the risk assessment approach and the AHP improved the risk evaluation and also determined the risk zone for Android applications. The applications taken from Drebin and AndrZoo were used for fixing the validation and reputation of the EZADroid. It was noted that the EZADroid offered a good risk zone evaluation performance.
The EZADroid performed and achieved a 89% accuracy rate in the experimental evaluation of 5000 malware and 5000 benign applications based on the 10 criteria approach. It was also noted that the EZADroid was able to achieve an accuracy rate of over 80% on risk evaluation without using the machine learning classifier. This is the main advantage of the proposed approach. Moreover, the approach was also suitable to be installed on a mobile device as it provides good risk evaluation and increases user awareness about the risk of applications. This was accomplished through the illustration of the risk zone threshold.
The EZADroid approach has a limitation in running the risk evaluation for malware applications that do not use the criteria that were selected in its permission. This is a limitation of all permission-based malware detection mechanisms. Furthermore, the EZADroid was also unable to calculate the risk if the malware application does not have any permission. Nonetheless, this addressed by combining the permission-based applications with other different criteria. Another limitation traced to the general static analysis applied. Here, the static analysis was less efficient in detecting the malware with an obfuscation technique. Considering the weaknesses of this study, an uninstalled or blocked application may be a good protection alternative for mobile devices. Therefore, more investigations and experimentations on Android risk assessments need to be conducted.
# M.F.A. Razak et al. / Measurement 133 (2019) 396–411
#dlg-join (accessed September 8, 2016).
11. F. Idrees, M. Rajarajan, M. Conti, T.M. Chen, Y. Rahulamathavan, PIndroid: a novel Android malware detection system using ensemble learning methods, Comput. Secur. 68 (2017) 36–46, https://doi.org/10/j.cose.
12. Vanja Svajcer, Plankton malware drifts into Android Market, SophosLab, 2011. https://nakedsecurity.sophos.com/2011/06/14/plankton-malware-drifts-into-android-market/ (accessed September 21, 2016).
13. N.B. Anuar, M. Papadaki, S. Furnell, N. Clarke, A response selection model for intrusion response systems: Response Strategy Model (RSM), Secur. Commun. Networks 7 (2013) 71–81, https://doi.org/10/sec.
14. National Institute of Standards and Technology Gaithersburg, Guide for conducting risk assessments, NIST Special Publication, 2012, p. 95. http://doi.org/10/NIST.SP-30r1.
15. N.B. Anuar, M. Papadaki, S. Furnell, N. Clarke, Incident prioritisation using analytic hierarchy process (AHP): Risk Index Model (RIM), Secur. Commun. Networks 6 (2013) 1087–1116, https://doi.org/10/sec.
16. J. Westenberg, Facebook now allowing Google to index its mobile app, Android Authority, 2015. http://www.androidauthority.com/facebook-allowing-google-to-index-its-mobile-app-655958/ (accessed April 4, 2017).
17. K. Tam, A. Feizollah, N.B. Anuar, R. Salleh, L. Cavallaro, The evolution of Android malware and Android analysis techniques, ACM Comput. Surv. 49 (2017) 1–41, https://doi.org/10/3017427.
18. Université du Luxembourg, AndroZoo, 2018. https://androzoo.uni.lu/ (accessed July 3, 2018).
19. P. Faruki, V. Ganmoor, V. Laxmi, M.S. Gaur, A. Bharmal, AndroSimilar: robust statistical feature signature for Android malware detection, in: Proceedings of the 6th International Conference on Security of Information and Networks, ACM, 2013, pp. 152–159.
20. A. Firdaus, N.B. Anuar, A. Karim, M.F.A. Razak, Discovering optimal features using static analysis and genetic search based method for Android malware detection, Front. Inf. Technol. Electron. Eng. (2017) 1–27, https://doi.org/10/FITEE.
21. B. Rashidi, C. Fung, E. Bertino, Android resource usage risk assessment using hidden Markov model and online learning, Comput. Secur. 65 (2017) 90–107, https://doi.org/10/j.cose.
22. A. Feizollah, N.B. Anuar, R. Salleh, G. Suarez-Tangil, S. Furnell, Androdialysis: analysis of Android intent effectiveness in malware detection, Comput. Secur. 65 (2017) 121–134, https://doi.org/10/j.cose.
23. S. Learning, F. Orphan, A. Problemsoftware, A. Recovery, M. Bibi, O. Maqbool, J. Kanwal, Supervised learning for orphan adoption problem in software architecture recovery, Malaysian J. Comput. Sci. 29 (2016) 287–313.